version: '3'
services:
  web:
    image: nginx
    links:
      - react
      - server
    ports:
      - "81:80"
    environment:
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_PORT=${NGINX_PORT}
    volumes:
      - ./docker/nginx/conf.d/site-demo.dev.conf:/etc/nginx/conf.d/site.template:ro
    command: /bin/bash -c "envsubst \"`for v in $$(compgen -v);do printf '$${%s} ' $$v;done`'\" < /etc/nginx/conf.d/site.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
  server:
    image: node:latest
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    environment:
      - NODE_PORT=${NODE_PORT}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_HOST=${DATABASE_HOST}
    links:
      - database
    depends_on:
      - database
    volumes:
      - ./server/:/usr/src/app/
      - ./src/config/statuses.js:/usr/src/app/_config/statuses.js
      - ./src/routing/routingConfig.js:/usr/src/app/_config/routingConfig.js
      - ./src/routing/routingPaths.js:/usr/src/app/_config/routingPaths.js
      - /usr/src/app/node_modules/
#    command: bash -c "sh ./start.sh"
    command: bash -c "./node_modules/.bin/babel --presets es2015 /usr/src/app/_config --watch --out-dir /usr/src/app/config & npm start"
  database:
    image: mongo:latest
    ports:
      - "${DATABASE_PORT}:27017"
    volumes:
       - ./database/mongo:/data/db
  react:
    image: node:latest
    environment:
      - NPM_CONFIG_LOGLEVEL=warn
      - NODE_ENV=dev
    working_dir: /home/app
    volumes:
      - ./src:/home/app/src
      - ./public:/home/app/public
      - ./package.json:/home/app/package.json
      - ../rfut-front-base/lib:/home/base-front/lib
      - ../rfut-front-base/package.json:/home/base-front/package.json
    command: bash -c "npm install -g yarn@rc && chown -R node:node /home/base-front && cd ../base-front && yarn link && cd ../app && rm -rf node_modules && yarn link base-rfront && yarn install && yarn start"
